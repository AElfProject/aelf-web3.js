<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="208" failures="0" errors="0" time="38.404">
  <testsuite name="test/unit/util/utils.test.js" errors="0" failures="0" skipped="0" timestamp="2023-04-13T09:38:08" time="8.559" tests="18">
    <testcase classname="test utils" name="test padLeft" time="0.004">
    </testcase>
    <testcase classname="test utils" name="test padRight" time="0.001">
    </testcase>
    <testcase classname="test utils" name="test base58 decode and encode" time="0.077">
    </testcase>
    <testcase classname="test utils" name="test chainId convertor chainIdToBase58 and base58ToChainId" time="0.001">
    </testcase>
    <testcase classname="test utils" name="test array to hex" time="0.001">
    </testcase>
    <testcase classname="test utils" name="decode and encode address hex represent" time="0.001">
    </testcase>
    <testcase classname="test utils" name="is bigNumBer" time="0">
    </testcase>
    <testcase classname="test utils" name="is string" time="0.003">
    </testcase>
    <testcase classname="test utils" name="is function" time="0.001">
    </testcase>
    <testcase classname="test utils" name="is object" time="0.001">
    </testcase>
    <testcase classname="test utils" name="is boolean" time="0.001">
    </testcase>
    <testcase classname="test utils" name="is JSON" time="0.001">
    </testcase>
    <testcase classname="test utils" name="transform into bigNumber" time="0.004">
    </testcase>
    <testcase classname="test utils" name="convert to the unit" time="0.002">
    </testcase>
    <testcase classname="test utils" name="takes a number of wei and converts it to any other ether unit, takes a number of a unit and converts it to wei" time="0.001">
    </testcase>
    <testcase classname="test utils" name="uint array into hex string" time="0.001">
    </testcase>
    <testcase classname="test utils" name="set path in dot way" time="0">
    </testcase>
    <testcase classname="test utils" name="converts a negative numer into a twoâ€™s complement." time="0.06">
    </testcase>
  </testsuite>
  <testsuite name="test/unit/util/proto.test.js" errors="0" failures="0" skipped="0" timestamp="2023-04-13T09:38:08" time="8.682" tests="23">
    <testcase classname="test proto" name="deserialize fee" time="0.109">
    </testcase>
    <testcase classname="test proto" name="test fee with TransactionFeeCharged type" time="0.003">
    </testcase>
    <testcase classname="test proto" name="test fee with ResourceTokenCharged type" time="0.004">
    </testcase>
    <testcase classname="test proto" name="test fee with wrong type" time="0.054">
    </testcase>
    <testcase classname="test proto" name="test get serialized data from log" time="0.002">
    </testcase>
    <testcase classname="test proto" name="test get serialized data from log when Indexed is null" time="0.001">
    </testcase>
    <testcase classname="test proto" name="test get resource fee" time="0">
    </testcase>
    <testcase classname="test proto" name="test get resource fee without ResourceTokenCharged type" time="0.003">
    </testcase>
    <testcase classname="test proto" name="test get resource fee with empty input" time="0.001">
    </testcase>
    <testcase classname="test proto" name="test get transaction fee" time="0.003">
    </testcase>
    <testcase classname="test proto" name="test get transaction fee without TransactionFeeCharged type" time="0.003">
    </testcase>
    <testcase classname="test proto" name="test get transaction fee with empty input" time="0">
    </testcase>
    <testcase classname="test proto" name="test arrayBuffer to Hex" time="0">
    </testcase>
    <testcase classname="test proto" name="test get rep from address" time="0.008">
    </testcase>
    <testcase classname="test proto" name="test get rep from address with invalid params" time="0.003">
    </testcase>
    <testcase classname="test proto" name="test get address from rep" time="0.003">
    </testcase>
    <testcase classname="test proto" name="test get address object from rep" time="0">
    </testcase>
    <testcase classname="test proto" name="test get rep from hash" time="0.001">
    </testcase>
    <testcase classname="test proto" name="test get rep from hash with invalid params" time="0.001">
    </testcase>
    <testcase classname="test proto" name="test get hash from hex" time="0.002">
    </testcase>
    <testcase classname="test proto" name="test get hash object from hex" time="0.002">
    </testcase>
    <testcase classname="test proto" name="test encode transaction to protobuf type" time="0.008">
    </testcase>
    <testcase classname="test proto" name="test get transaction" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="test/unit/wallet/index.test.js" errors="0" failures="0" skipped="0" timestamp="2023-04-13T09:38:17" time="3.782" tests="8">
    <testcase classname="test wallet" name="test create new wallet" time="0.1">
    </testcase>
    <testcase classname="test wallet" name="test get wallet by mnemonic" time="0.132">
    </testcase>
    <testcase classname="test wallet" name="test get wallet by private key" time="0.326">
    </testcase>
    <testcase classname="test wallet" name="test get address from pubKey" time="0.167">
    </testcase>
    <testcase classname="test wallet" name="test sign transaction" time="0.661">
    </testcase>
    <testcase classname="test wallet" name="test sign" time="0.301">
    </testcase>
    <testcase classname="test wallet" name="test AESEncrypt and AESDecrypt" time="0.003">
    </testcase>
    <testcase classname="test wallet" name="test get wallet with error" time="0.04">
    </testcase>
  </testsuite>
  <testsuite name="test/unit/util/bloom.test.js" errors="0" failures="0" skipped="0" timestamp="2023-04-13T09:38:21" time="0.411" tests="8">
    <testcase classname="test bloom" name="test is in" time="0.014">
    </testcase>
    <testcase classname="test bloom" name="should return true if value is in bloom passing in hex string" time="0.002">
    </testcase>
    <testcase classname="test bloom" name="should return false if value is not in bloom" time="0.001">
    </testcase>
    <testcase classname="test bloom" name="should throw error if value is not valid bloom" time="0.005">
    </testcase>
    <testcase classname="test bloom" name="code point to int" time="0.001">
    </testcase>
    <testcase classname="test bloom" name="test is event in" time="0.001">
    </testcase>
    <testcase classname="test bloom" name="test is address in" time="0.008">
    </testcase>
    <testcase classname="test bloom" name="test is indexed in" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="test/unit/chain/chainMethod.test.js" errors="0" failures="0" skipped="0" timestamp="2023-04-13T09:38:08" time="13.317" tests="12">
    <testcase classname="chainMethod should work" name="test format input params with no inputFormatter" time="0.003">
    </testcase>
    <testcase classname="chainMethod should work" name="test format input params with inputFormatter" time="0.098">
    </testcase>
    <testcase classname="chainMethod should work" name="test manager is on ChainMethod" time="0">
    </testcase>
    <testcase classname="chainMethod should work" name="test format input params with no outputFormatter" time="0">
    </testcase>
    <testcase classname="chainMethod should work" name="test format input params with outputFormatter" time="0.067">
    </testcase>
    <testcase classname="chainMethod should work" name="test not enough parameters" time="0.014">
    </testcase>
    <testcase classname="chainMethod should work" name="test fn argument into object" time="0.002">
    </testcase>
    <testcase classname="chainMethod should work" name="test sync argument into object" time="0.001">
    </testcase>
    <testcase classname="chainMethod should work" name="test index is less than or equal to params.length" time="0">
    </testcase>
    <testcase classname="chainMethod should work" name="test sync argument" time="2.641">
    </testcase>
    <testcase classname="chainMethod should work" name="test fn argument when async" time="0.746">
    </testcase>
    <testcase classname="chainMethod should work" name="test run error when async" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="test/unit/util/requestManage.test.js" errors="0" failures="0" skipped="0" timestamp="2023-04-13T09:38:17" time="4.952" tests="7">
    <testcase classname="test requestManage" name="test prepare request with lower case" time="0.001">
    </testcase>
    <testcase classname="test requestManage" name="test prepare request with empty params" time="0.001">
    </testcase>
    <testcase classname="test requestManage" name="test set provider" time="0.001">
    </testcase>
    <testcase classname="test requestManage" name="test send with provider" time="2.665">
    </testcase>
    <testcase classname="test requestManage" name="test send without provider" time="0">
    </testcase>
    <testcase classname="test requestManage" name="test send async with provider" time="0.782">
    </testcase>
    <testcase classname="test requestManage" name="test send async without provider" time="0">
    </testcase>
  </testsuite>
  <testsuite name="test/unit/util/transform.test.js" errors="0" failures="0" skipped="0" timestamp="2023-04-13T09:38:08" time="13.598" tests="30">
    <testcase classname="test httpProvider" name="test transform with fieldsArray" time="0.018">
    </testcase>
    <testcase classname="test httpProvider" name="test transform with empty inputType fieldsArray" time="0.001">
    </testcase>
    <testcase classname="test httpProvider" name="test transform without field params" time="0.003">
    </testcase>
    <testcase classname="test httpProvider" name="test transform with fieldsArray which has repeated rule " time="0.002">
    </testcase>
    <testcase classname="test httpProvider" name="test transform with empty fieldsArray" time="0.01">
    </testcase>
    <testcase classname="test httpProvider" name="test transformMapToArray without inputType fieldsArray" time="0.001">
    </testcase>
    <testcase classname="test httpProvider" name="test transformMapToArray without origin" time="0.001">
    </testcase>
    <testcase classname="test httpProvider" name="test transformMapToArray with only one field and has not been resolved" time="0.001">
    </testcase>
    <testcase classname="test httpProvider" name="test transformMapToArray with resolvedType" time="0">
    </testcase>
    <testcase classname="test httpProvider" name="test transformMapToArray with fieldsArray which has resolvedType" time="0.001">
    </testcase>
    <testcase classname="test httpProvider" name="test transformMapToArray with map_entry option" time="0.001">
    </testcase>
    <testcase classname="test httpProvider" name="test transformMapToArray without inputType fieldsArray" time="0">
    </testcase>
    <testcase classname="test httpProvider" name="test transformArrayToMap without origin" time="0.001">
    </testcase>
    <testcase classname="test httpProvider" name="test transformArrayToMap with only one field and has not been resolved" time="0">
    </testcase>
    <testcase classname="test httpProvider" name="test transformArrayToMap with resolvedType" time="0.001">
    </testcase>
    <testcase classname="test httpProvider" name="test transformArrayToMap with fieldsArray which has resolvedType" time="0.007">
    </testcase>
    <testcase classname="test httpProvider" name="test transformArrayToMap with map_entry option" time="0.002">
    </testcase>
    <testcase classname="test httpProvider" name="test transformArrayToMap with map_entry and repeated options" time="0.001">
    </testcase>
    <testcase classname="test httpProvider" name="test encode address" time="0.001">
    </testcase>
    <testcase classname="test httpProvider" name="test input address filter with Address format" time="0.001">
    </testcase>
    <testcase classname="test httpProvider" name="test input address transformer with string origin" time="0.001">
    </testcase>
    <testcase classname="test httpProvider" name="test input address transformer with array origin" time="0.001">
    </testcase>
    <testcase classname="test httpProvider" name="test input hash transformer with string origin" time="0">
    </testcase>
    <testcase classname="test httpProvider" name="test input hash transformer with array origin" time="0">
    </testcase>
    <testcase classname="test httpProvider" name="test output address transformer with string origin" time="0.001">
    </testcase>
    <testcase classname="test httpProvider" name="test output address transformer with object origin" time="0">
    </testcase>
    <testcase classname="test httpProvider" name="test output address transformer with array object origin" time="0.006">
    </testcase>
    <testcase classname="test httpProvider" name="test output hash transformer with string origin" time="0">
    </testcase>
    <testcase classname="test httpProvider" name="test output hash transformer with array object origin" time="0.001">
    </testcase>
    <testcase classname="test httpProvider" name="test output address transformer with object origin" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="test/unit/util/merkleTree.test.js" errors="0" failures="0" skipped="0" timestamp="2023-04-13T09:38:21" time="0.593" tests="8">
    <testcase classname="test merkleTree" name="test compute root" time="0.002">
    </testcase>
    <testcase classname="test merkleTree" name="generate merkle tree with no data" time="0">
    </testcase>
    <testcase classname="test merkleTree" name="test get merkle path" time="0.002">
    </testcase>
    <testcase classname="test merkleTree" name="test get merkle path with reverse sequence" time="0.001">
    </testcase>
    <testcase classname="test merkleTree" name="test get merkle path with long sequence" time="0.007">
    </testcase>
    <testcase classname="test merkleTree" name="test get merkle path" time="0.001">
    </testcase>
    <testcase classname="test merkleTree" name="test node" time="0">
    </testcase>
    <testcase classname="test merkleTree" name="should throw error if get more than two params" time="0.068">
    </testcase>
  </testsuite>
  <testsuite name="test/unit/util/hash.test.js" errors="0" failures="0" skipped="0" timestamp="2023-04-13T09:38:22" time="0.245" tests="2">
    <testcase classname="test hash" name="test keccak256" time="0.002">
    </testcase>
    <testcase classname="test hash" name="test keccak512" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="test/unit/util/formatter.test.js" errors="0" failures="0" skipped="0" timestamp="2023-04-13T09:38:22" time="0.403" tests="2">
    <testcase classname="test formatter" name="test input address formatter" time="0.012">
    </testcase>
    <testcase classname="test formatter" name="test output file descriptor set formatter" time="0.055">
    </testcase>
  </testsuite>
  <testsuite name="test/unit/util/errors.test.js" errors="0" failures="0" skipped="0" timestamp="2023-04-13T09:38:23" time="0.4" tests="5">
    <testcase classname="test errors" name="test throws an error when invalid number of input parameters" time="0">
    </testcase>
    <testcase classname="test errors" name="test throws an error when connection is invalid" time="0">
    </testcase>
    <testcase classname="test errors" name="test throws an error when provider is invalid" time="0">
    </testcase>
    <testcase classname="test errors" name="test throws an error when response is invalid" time="0.001">
    </testcase>
    <testcase classname="test errors" name="test throws an error when connection timeout" time="0">
    </testcase>
  </testsuite>
  <testsuite name="test/unit/util/transaction.test.js" errors="0" failures="0" skipped="0" timestamp="2023-04-13T09:38:22" time="3.053" tests="3">
    <testcase classname="test deserializing transaction" name="deserialize transaction" time="0.016">
    </testcase>
    <testcase classname="test deserializing transaction" name="unpack specified type data" time="0.001">
    </testcase>
    <testcase classname="test deserializing transaction" name="authorization information" time="0">
    </testcase>
  </testsuite>
  <testsuite name="test/unit/util/settings.test.js" errors="0" failures="0" skipped="0" timestamp="2023-04-13T09:38:25" time="0.184" tests="1">
    <testcase classname="test settings" name="test constructor" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="test/unit/contract/index.test.js" errors="0" failures="0" skipped="0" timestamp="2023-04-13T09:38:22" time="4.611" tests="5">
    <testcase classname="contract factory" name="constrcutor" time="0.001">
    </testcase>
    <testcase classname="contract factory" name="test contract instance" time="0.003">
    </testcase>
    <testcase classname="contract factory" name="test deserialize log" time="0.002">
    </testcase>
    <testcase classname="contract factory" name="test deserialize log with empty logs" time="0">
    </testcase>
    <testcase classname="contract factory" name="test deserialize log with empty NonIndexed" time="0">
    </testcase>
  </testsuite>
  <testsuite name="test/unit/index.test.js" errors="0" failures="0" skipped="0" timestamp="2023-04-13T09:38:23" time="3.23" tests="2">
    <testcase classname="test AElf" name="test AElf is connected" time="1.334">
    </testcase>
    <testcase classname="test AElf" name="test AElf set provider" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="test/unit/util/keyStore.test.js" errors="0" failures="0" skipped="0" timestamp="2023-04-13T09:38:22" time="5.684" tests="7">
    <testcase classname="test keyStore" name="test get keyStore" time="1.98">
    </testcase>
    <testcase classname="test keyStore" name="test get keyStore without kdfparams dklen" time="0.996">
    </testcase>
    <testcase classname="test keyStore" name="test get keyStore with default cipher" time="0.639">
    </testcase>
    <testcase classname="test keyStore" name="test get keyStore with no exist cipher" time="0.325">
    </testcase>
    <testcase classname="test keyStore" name="test get keyStore with undefined cipher" time="0.312">
    </testcase>
    <testcase classname="test keyStore" name="test check password" time="0.31">
    </testcase>
    <testcase classname="test keyStore" name="test wrong  password" time="0.309">
    </testcase>
  </testsuite>
  <testsuite name="test/unit/util/httpProvider.test.js" errors="0" failures="0" skipped="0" timestamp="2023-04-13T09:38:08" time="25.572" tests="33">
    <testcase classname="test httpProvider" name="test host default" time="0.003">
    </testcase>
    <testcase classname="test httpProvider" name="test headers are Array" time="0.001">
    </testcase>
    <testcase classname="test httpProvider" name="test headers are Object" time="0.001">
    </testcase>
    <testcase classname="test httpProvider" name="test format response when can parse to JSON" time="0.001">
    </testcase>
    <testcase classname="test httpProvider" name="test format response when cannot parse to JSON" time="0">
    </testcase>
    <testcase classname="test httpProvider" name="test format response text with status and statusText" time="0.001">
    </testcase>
    <testcase classname="test httpProvider" name="test format response text with status 200" time="0.001">
    </testcase>
    <testcase classname="test httpProvider" name="test format response text when param is not object" time="0">
    </testcase>
    <testcase classname="test httpProvider" name="test format response text when error" time="0">
    </testcase>
    <testcase classname="test httpProvider" name="test timeout" time="0.003">
    </testcase>
    <testcase classname="test httpProvider" name="test get request send by fetch" time="0.938">
    </testcase>
    <testcase classname="test httpProvider" name="test post request send by fetch" time="1.004">
    </testcase>
    <testcase classname="test httpProvider" name="test send async by fetch" time="0.685">
    </testcase>
    <testcase classname="test httpProvider" name="test send async by fetch when no AbortController" time="0.007">
    </testcase>
    <testcase classname="test httpProvider" name="test send async by fetch when error" time="0.586">
    </testcase>
    <testcase classname="test httpProvider" name="test send async by fetch without result.text" time="0.004">
    </testcase>
    <testcase classname="test httpProvider" name="test send async by fetch when reject" time="0.003">
    </testcase>
    <testcase classname="test httpProvider" name="test send async by fetch when timeout" time="0.004">
    </testcase>
    <testcase classname="test httpProvider" name="test send async by fetch when status is not 200" time="0.003">
    </testcase>
    <testcase classname="test httpProvider" name="test send async by fetch when result is not ok" time="0.004">
    </testcase>
    <testcase classname="test httpProvider" name="test get request send by xhr" time="2.813">
    </testcase>
    <testcase classname="test httpProvider" name="test post request send by xhr" time="2.326">
    </testcase>
    <testcase classname="test httpProvider" name="test send by fetch" time="0.004">
    </testcase>
    <testcase classname="test httpProvider" name="test send by xhr" time="2.379">
    </testcase>
    <testcase classname="test httpProvider" name="test send by xhr when error" time="0.005">
    </testcase>
    <testcase classname="test httpProvider" name="test send async by fetch method" time="1.354">
    </testcase>
    <testcase classname="test httpProvider" name="test send async by xhr method" time="0.837">
    </testcase>
    <testcase classname="test httpProvider" name="test send async by xhr" time="1.126">
    </testcase>
    <testcase classname="test httpProvider" name="test send async by xhr when error" time="0.801">
    </testcase>
    <testcase classname="test httpProvider" name="test is connected" time="1.505">
    </testcase>
    <testcase classname="test httpProvider" name="test is not connected" time="1.185">
    </testcase>
    <testcase classname="test httpProvider" name="test is connected when async" time="0.763">
    </testcase>
    <testcase classname="test httpProvider" name="test is not connected when async" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="test/unit/chain/index.test.js" errors="0" failures="0" skipped="0" timestamp="2023-04-13T09:38:08" time="31.103" tests="12">
    <testcase classname="chain should work" name="test is chain method on object" time="0.002">
    </testcase>
    <testcase classname="chain should work" name="test fn argument into object " time="0.001">
    </testcase>
    <testcase classname="chain should work" name="test sync argument into object" time="0.001">
    </testcase>
    <testcase classname="chain should work" name="test is concrete contract when sync" time="3.011">
    </testcase>
    <testcase classname="chain should work" name="test is invalid contract when sync" time="0.019">
    </testcase>
    <testcase classname="chain should work" name="test is concrete contract when async" time="1.641">
    </testcase>
    <testcase classname="chain should work" name="test is invalid contract when async" time="0.002">
    </testcase>
    <testcase classname="chain should work" name="test is invalid contract with noop callback" time="0.001">
    </testcase>
    <testcase classname="chain should work" name="test txId has corresponding transaction in the block with height when sync" time="5.993">
    </testcase>
    <testcase classname="chain should work" name="test txId has no corresponding transaction in the block with height when sync" time="2.476">
    </testcase>
    <testcase classname="chain should work" name="test txId has corresponding transaction in the block with height when async" time="3.555">
    </testcase>
    <testcase classname="chain should work" name="test txId has no corresponding transaction in the block with height when async" time="1.317">
    </testcase>
  </testsuite>
  <testsuite name="test/unit/contract/contractMethod.test.js" errors="0" failures="0" skipped="0" timestamp="2023-04-13T09:38:08" time="36.752" tests="22">
    <testcase classname="token contract with transfer method" name="test constructor" time="0.005">
    </testcase>
    <testcase classname="token contract with transfer method" name="test pack input" time="0.006">
    </testcase>
    <testcase classname="token contract with transfer method" name="test unpack packed input" time="0.002">
    </testcase>
    <testcase classname="token contract with GetBalance method" name="test unpack output" time="0.002">
    </testcase>
    <testcase classname="token contract with GetBalance method" name="test output" time="0.002">
    </testcase>
    <testcase classname="token contract with GetBalance method" name="test handle transaction" time="1.81">
    </testcase>
    <testcase classname="token contract with GetBalance method" name="test prepare parameters async" time="0.772">
    </testcase>
    <testcase classname="token contract with GetBalance method" name="test prepare parameters sync" time="1.357">
    </testcase>
    <testcase classname="token contract with GetBalance method" name="test prepare parameters with block info" time="0.035">
    </testcase>
    <testcase classname="token contract with GetBalance method" name="test send transaction" time="1.663">
    </testcase>
    <testcase classname="token contract with GetBalance method" name="test send transaction sync" time="3.454">
    </testcase>
    <testcase classname="token contract with GetBalance method" name="test call read only" time="4.532">
    </testcase>
    <testcase classname="token contract with GetBalance method" name="test extract arguments into object" time="0.002">
    </testcase>
    <testcase classname="token contract with GetBalance method" name="test extract arguments into object with empty args" time="0.001">
    </testcase>
    <testcase classname="token contract with GetBalance method" name="test get signed tx" time="0.041">
    </testcase>
    <testcase classname="token contract with GetBalance method" name="test get signed tx with only one param" time="1.807">
    </testcase>
    <testcase classname="token contract with GetBalance method" name="test get signed tx without hash or height" time="0.049">
    </testcase>
    <testcase classname="token contract with GetBalance method" name="test get raw tx" time="0.002">
    </testcase>
    <testcase classname="token contract with GetBalance method" name="test get raw tx with hex hashInput" time="0.002">
    </testcase>
    <testcase classname="token contract with GetBalance method" name="test request" time="1.457">
    </testcase>
    <testcase classname="token contract with GetBalance method" name="test run" time="1.749">
    </testcase>
    <testcase classname="token contract with GetBalance method" name="test bind method to contract" time="0.003">
    </testcase>
  </testsuite>
</testsuites>